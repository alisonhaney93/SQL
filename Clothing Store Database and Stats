--Create a store database

CREATE TABLE clothing_store (id INTEGER PRIMARY KEY, item_name TEXT, item_color TEXT, item_cost INTEGER, item_quantity INTEGER);

INSERT INTO clothing_store VALUES
(1, "t-shirt", "pink", 4.99, 43),
(2, "t-shirt", "yellow", 5.19, 21),
(3, "t-shirt", "black", 6.81, 12),
(4, "long-sleeved shirt", "white", 8.79, 17),
(5, "long-sleeved shirt", "blue", 9.18, 13),
(6, "acid-washed jean shorts", "light blue", 12.99, 23),
(7, "acid-washed jean shorts", "grey", 10.99, 34),
(8, "ripped high-waisted shorts", "dark blue", 8.79, 16),
(9, "ripped high-waisted shorts", "black", 13.49, 6),
(10, "mom jeans", "light blue", 32.99, 19),
(11, "mom jeans", "black", 29.99, 14),
(12, "mom jeans", "hot pink", 7.99, 32),
(13, "crop top", "rainbow", 27.39, 3),
(14, "crop top", "grey", 12.89, 13),
(15, "hair claw clip", "gold", 15.99, 12);

-- Display the database ordered by price of items in descending order
SELECT * FROM clothing_store
ORDER BY item_cost DESC;

-- If all items in stock were sold for their current price, what would the gross profit of each item type be?
SELECT item_name, ROUND(SUM(item_cost*item_quantity), 2) AS gross_profit
FROM clothing_store
GROUP BY item_name
ORDER BY gross_profit;

-- Which items are low on stock or overstocked (i.e., less than 10 in stock or over 30 in stock, respectively)?
SELECT * FROM clothing_store
WHERE item_quantity < 10 OR item_quantity > 30
ORDER BY item_quantity;
